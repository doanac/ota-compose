#!/bin/sh -e

this=$(readlink -f $0)
data="${CREDS_DATA-$(dirname $this)/../creds-data}"

if [ -z "$INDOCKER" ] ; then
	echo "Calling via docker with proper tooling"
	exec docker run -it --rm \
		--network otacompose_default \
		-v $this:$this \
		-v $data:$data \
		-e INDOCKER=1 \
		-e UPTANE=$UPTANE \
		-e CREDS_DATA=$data \
		hub.foundries.io/aktualizr $this
fi

echo "=$(date) Installing prereqs"
apk add --no-cache curl jq zip | sed 's/^/|  /'
apk upgrade libcurl

function curl_() {
	error_msg=$1
	shift
	curl -v $* >/tmp/resp 2>/tmp/errs || true
	if ! grep "200 OK" /tmp/errs >/dev/null 2>&1 ; then
		if ! grep "201 Created" /tmp/errs >/dev/null 2>&1 ; then
			echo $error_msg
			cat /tmp/errs | sed 's/^/|  /'
			echo "|--"
			cat /tmp/resp | sed 's/^/|  /'
			echo "|--"
			exit 1
		fi
	fi
}

echo "=$(date) Creating "default" namespace"
curl_ "Error creating namespace:" -d default http://tuf-reposerver:9001/api/v1/user_repo
id=$(cat /tmp/resp | tr -d  \")
echo "=$(date) Namespace ID is $id"
echo "default = $id" >> "$data/namespaces"

if [ -n "$UPTANE" ] ; then
	echo "=$(date) Creating "default" namespace in director"
	curl_ "Creating director repo" -d default http://director:9001/api/v1/admin/repo
fi

echo "=$(date) Waiting for keys"
sleep 5
curl_ "Error finding TUF Keys:" http://tuf-keyserver:9001/api/v1/root/$id


keys=$(curl  http://tuf-keyserver:9001/api/v1/root/$id/keys/targets/pairs)
echo ${keys} | jq '.[0] | {keytype, keyval: {public: .keyval.public}}'   > "$data/targets.pub"
echo ${keys} | jq '.[0] | {keytype, keyval: {private: .keyval.private}}' > "$data/targets.sec"
curl http://tuf-reposerver:9001/api/v1/user_repo/root.json  > "$data/root.json"

echo "http://tuf-reposerver:9001" > "$data/tufrepo.url"

cat > "$data/treehub.json" <<EOF
{
	"no_auth": true,
	"ostree": {
		"server": "http://treehub:9001/api/v3/"
	}
}
EOF

cat > "$data/mk-credentials-zip" << EOF
#!/bin/sh -e
cd $data
zip credentials.zip tufrepo.url targets.pub targets.sec treehub.json root.json
EOF
chmod +x "$data/mk-credentials-zip"

echo "=$(date) credentials.zip can be generated by running: $data/mk-credentials-zip"
